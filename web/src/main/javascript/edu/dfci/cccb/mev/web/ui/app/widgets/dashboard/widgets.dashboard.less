.addBorder{
	border: solid 1px blue;
}
//flexbox
@panel-heading-padding-v: unit(extract(@panel-heading-padding, 1));
@panel-heading-padding-v-unit: get-unit(extract(@panel-heading-padding, 1));
@panel-heading-padding-h: unit(extract(@panel-heading-padding, 2));
@panel-heading-padding-h-unit: get-unit(extract(@panel-heading-padding, 2));
@panel-margin: @padding-base-v / 2;

.container-flex{
	display: flex;		
	flex-direction: row;
	flex-wrap: wrap;
	overflow-y: auto;
	padding-top: @padding-base-vertical / 2;
	padding-bottom: @padding-base-vertical / 2;	
//	border: solid 1px @brand-info;
	&.v-stretch{
		height: 100%;
	}
	&.right-to-left{
		flex-direction: row-reverse;
	}	
	&.top-to-bottom{
		flex-direction: column;
	}
	&.upsidedown{
		flex-direction: column-reverse;
	}		
	&.h-stretch{		
		.flex-spacing{
			flex-grow: 1;
		}		
	}
	.flex-spacing {
		max-height: 100%;
		min-height: 50%;
		max-width: 50%;
		min-width: 50%;
		position: relative;
		display: flex;
		flex-direction: row;
		&.max{
			max-height: 100%;
			max-width: 100%;
			width: 100%
		}
		&.rowMax{
			max-width: 100%;
			width: 100%;			
		}
		.flex-panel{			
			display: flex;
			flex-direction: column;
			flex-grow: 1;				
	//		background-color: beige;		
			border: solid 1px @brand-info;					
			margin: @panel-margin;
					
			.header{
				flex-grow: 0;
				display: flex;
				justify-content: space-between;
				color: white;
				background-color: @brand-info;
				padding:  (@panel-heading-padding-v) @padding-base-horizontal;
				margin: 0px;			
				min-height: @line-height-computed + @panel-heading-padding-v * 2;						
				> .title{								
					flex-grow: 1;
				}
				> .controls{							
//					margin-top: -(@panel-heading-padding-h - 5);
//					margin-bottom: -(@panel-heading-padding-h - 5);
//					padding: @panel-heading-padding-v @panel-heading-padding-h;
//					border: solid 1px #fff;
					margin-right: -(@panel-heading-padding-h / 2 );							
					a {					
						color: @body-bg;		
						font-size: @font-size-small;
						padding: 5px;
						.fa-angle-double-left,
						.fa-angle-double-right{
							font-weight: bold;
						}
					}
				}
			}
			.content{			
				flex-grow: 1;
				position: relative;				
				//we don't need to overflow the content 
				//(as long as analysis directives take care of their own scrolling)
				//Ideally, we should be able to leave overflow: auto here. This will cover
				//both cases - i.e. it will turn on only if the content overflows.
				//However, currently the analysis content will always overflow 
				//due to using tab content height: 100% plus the tab header.
				//The fix may be to switch analysis tabs to use flexbox.   				
				//overflow-x: auto;			
				> div { //this is the ng-transclude element where analysis is inserted				
				    position: absolute;
				    height: 100%;
				    width: 100%;				
					> * {//this is the first element of the actual content (the analysis widget) 
						display: block;			
						//just to test scrolling
						//height: 1000px;
						//width: 1000px;
					}
				}
			}
		}
	}
}

.debug {
	div{
			border: solid 1px red;
			padding: 2px;
			margin: 2px;		
		}		
}